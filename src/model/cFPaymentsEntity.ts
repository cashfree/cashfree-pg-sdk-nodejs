/**
 * New Payment Gateway APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: nextgenapi@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CFAuthorizationInPaymentsEntity } from './cFAuthorizationInPaymentsEntity';
import { CFPaymentsEntityPayment } from './cFPaymentsEntityPayment';

export class CFPaymentsEntity {
    'cfPaymentId'?: number;
    'orderId'?: string;
    'entity'?: string;
    'isCaptured'?: boolean;
    /**
    * Order amount can be different from payment amount if you collect service fee from the customer
    */
    'orderAmount'?: number;
    /**
    * Type of payment group. One of [\'upi\', \'card\', \'app\', \'netbanking\', \'paylater\', \'cardless_emi\']
    */
    'paymentGroup'?: string;
    'paymentCurrency'?: string;
    'paymentAmount'?: number;
    'paymentTime'?: string;
    /**
    * The transaction status can be one of  [\"SUCCESS\", \"NOT_ATTEMPTED\", \"FAILED\", \"USER_DROPPED\", \"VOID\", \"CANCELLED\", \"PENDING\"]
    */
    'paymentStatus'?: CFPaymentsEntity.PaymentStatusEnum;
    'paymentMessage'?: string;
    'bankReference'?: string;
    'authId'?: string;
    'authorization'?: CFAuthorizationInPaymentsEntity;
    'paymentMethod'?: CFPaymentsEntityPayment;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "cfPaymentId",
            "baseName": "cf_payment_id",
            "type": "number"
        },
        {
            "name": "orderId",
            "baseName": "order_id",
            "type": "string"
        },
        {
            "name": "entity",
            "baseName": "entity",
            "type": "string"
        },
        {
            "name": "isCaptured",
            "baseName": "is_captured",
            "type": "boolean"
        },
        {
            "name": "orderAmount",
            "baseName": "order_amount",
            "type": "number"
        },
        {
            "name": "paymentGroup",
            "baseName": "payment_group",
            "type": "string"
        },
        {
            "name": "paymentCurrency",
            "baseName": "payment_currency",
            "type": "string"
        },
        {
            "name": "paymentAmount",
            "baseName": "payment_amount",
            "type": "number"
        },
        {
            "name": "paymentTime",
            "baseName": "payment_time",
            "type": "string"
        },
        {
            "name": "paymentStatus",
            "baseName": "payment_status",
            "type": "CFPaymentsEntity.PaymentStatusEnum"
        },
        {
            "name": "paymentMessage",
            "baseName": "payment_message",
            "type": "string"
        },
        {
            "name": "bankReference",
            "baseName": "bank_reference",
            "type": "string"
        },
        {
            "name": "authId",
            "baseName": "auth_id",
            "type": "string"
        },
        {
            "name": "authorization",
            "baseName": "authorization",
            "type": "CFAuthorizationInPaymentsEntity"
        },
        {
            "name": "paymentMethod",
            "baseName": "payment_method",
            "type": "CFPaymentsEntityPayment"
        }    ];

    static getAttributeTypeMap() {
        return CFPaymentsEntity.attributeTypeMap;
    }
}

export namespace CFPaymentsEntity {
    export enum PaymentStatusEnum {
        Success = <any> 'SUCCESS',
        NotAttempted = <any> 'NOT_ATTEMPTED',
        Failed = <any> 'FAILED',
        UserDropped = <any> 'USER_DROPPED',
        Void = <any> 'VOID',
        Cancelled = <any> 'CANCELLED',
        Pending = <any> 'PENDING'
    }
}
