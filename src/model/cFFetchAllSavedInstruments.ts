/**
 * New Payment Gateway APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: nextgenapi@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CFSavedInstrumentMeta } from './cFSavedInstrumentMeta';

export class CFFetchAllSavedInstruments {
    /**
    * customer_id for which the instrument was saved
    */
    'customerId'?: string;
    /**
    * cf_payment_id of the successful transaction done while saving instrument
    */
    'afaReference'?: number;
    /**
    * saved instrument id
    */
    'instrumentId'?: string;
    /**
    * Type of the saved instrument
    */
    'instrumentType'?: CFFetchAllSavedInstruments.InstrumentTypeEnum;
    /**
    * Unique id for the saved instrument
    */
    'instrumentUid'?: string;
    /**
    * masked card number displayed to the customer
    */
    'instrumentDisplay'?: string;
    /**
    * status of the saved instrument
    */
    'instrumentStatus'?: CFFetchAllSavedInstruments.InstrumentStatusEnum;
    /**
    * timestamp at which instrument was saved
    */
    'createdAt'?: string;
    'instrumentMeta'?: CFSavedInstrumentMeta;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "customerId",
            "baseName": "customer_id",
            "type": "string"
        },
        {
            "name": "afaReference",
            "baseName": "afa_reference",
            "type": "number"
        },
        {
            "name": "instrumentId",
            "baseName": "instrument_id",
            "type": "string"
        },
        {
            "name": "instrumentType",
            "baseName": "instrument_type",
            "type": "CFFetchAllSavedInstruments.InstrumentTypeEnum"
        },
        {
            "name": "instrumentUid",
            "baseName": "instrument_uid",
            "type": "string"
        },
        {
            "name": "instrumentDisplay",
            "baseName": "instrument_display",
            "type": "string"
        },
        {
            "name": "instrumentStatus",
            "baseName": "instrument_status",
            "type": "CFFetchAllSavedInstruments.InstrumentStatusEnum"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string"
        },
        {
            "name": "instrumentMeta",
            "baseName": "instrument_meta",
            "type": "CFSavedInstrumentMeta"
        }    ];

    static getAttributeTypeMap() {
        return CFFetchAllSavedInstruments.attributeTypeMap;
    }
}

export namespace CFFetchAllSavedInstruments {
    export enum InstrumentTypeEnum {
        Card = <any> 'card'
    }
    export enum InstrumentStatusEnum {
        Active = <any> 'ACTIVE',
        Inactive = <any> 'INACTIVE'
    }
}
