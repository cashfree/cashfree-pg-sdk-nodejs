/**
 * New Payment Gateway APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2022-01-01
 * Contact: nextgenapi@cashfree.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { CFVendorSplit } from './cFVendorSplit';

export class CFRefund {
    /**
    * Cashfree Payments ID of the payment for which refund is initiated
    */
    'cfPaymentId'?: number;
    /**
    * Cashfree Payments ID for a refund
    */
    'cfRefundId'?: string;
    /**
    * Merchant’s order Id of the order for which refund is initiated
    */
    'orderId'?: string;
    /**
    * Merchant’s refund ID of the refund
    */
    'refundId'?: string;
    /**
    * Type of object
    */
    'entity'?: CFRefund.EntityEnum;
    /**
    * Amount that is refunded
    */
    'refundAmount'?: number;
    /**
    * Currency of the refund amount
    */
    'refundCurrency'?: string;
    /**
    * Note added by merchant for the refund
    */
    'refundNote'?: string;
    /**
    * This can be one of [\"SUCCESS\", \"PENDING\", \"CANCELLED\", \"ONHOLD\"]
    */
    'refundStatus'?: CFRefund.RefundStatusEnum;
    /**
    * The bank reference number for refund
    */
    'refundArn'?: string;
    /**
    * Charges in INR for processing refund
    */
    'refundCharge'?: number;
    /**
    * Description of refund status
    */
    'statusDescription'?: string;
    /**
    * Key-value pair that can be used to store additional information about the entity. Maximum 5 key-value pairs
    */
    'metadata'?: object;
    'refundSplits'?: Array<CFVendorSplit>;
    /**
    * This can be one of [\"PAYMENT_AUTO_REFUND\", \"MERCHANT_INITIATED\", \"UNRECONCILED_AUTO_REFUND\"]
    */
    'refundType'?: CFRefund.RefundTypeEnum;
    /**
    * Method or speed of processing refund
    */
    'refundMode'?: CFRefund.RefundModeEnum;
    /**
    * Time of refund creation
    */
    'createdAt'?: string;
    /**
    * Time when refund was processed successfully
    */
    'processedAt'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "cfPaymentId",
            "baseName": "cf_payment_id",
            "type": "number"
        },
        {
            "name": "cfRefundId",
            "baseName": "cf_refund_id",
            "type": "string"
        },
        {
            "name": "orderId",
            "baseName": "order_id",
            "type": "string"
        },
        {
            "name": "refundId",
            "baseName": "refund_id",
            "type": "string"
        },
        {
            "name": "entity",
            "baseName": "entity",
            "type": "CFRefund.EntityEnum"
        },
        {
            "name": "refundAmount",
            "baseName": "refund_amount",
            "type": "number"
        },
        {
            "name": "refundCurrency",
            "baseName": "refund_currency",
            "type": "string"
        },
        {
            "name": "refundNote",
            "baseName": "refund_note",
            "type": "string"
        },
        {
            "name": "refundStatus",
            "baseName": "refund_status",
            "type": "CFRefund.RefundStatusEnum"
        },
        {
            "name": "refundArn",
            "baseName": "refund_arn",
            "type": "string"
        },
        {
            "name": "refundCharge",
            "baseName": "refund_charge",
            "type": "number"
        },
        {
            "name": "statusDescription",
            "baseName": "status_description",
            "type": "string"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "object"
        },
        {
            "name": "refundSplits",
            "baseName": "refund_splits",
            "type": "Array<CFVendorSplit>"
        },
        {
            "name": "refundType",
            "baseName": "refund_type",
            "type": "CFRefund.RefundTypeEnum"
        },
        {
            "name": "refundMode",
            "baseName": "refund_mode",
            "type": "CFRefund.RefundModeEnum"
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string"
        },
        {
            "name": "processedAt",
            "baseName": "processed_at",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return CFRefund.attributeTypeMap;
    }
}

export namespace CFRefund {
    export enum EntityEnum {
        Refund = <any> 'refund'
    }
    export enum RefundStatusEnum {
        Success = <any> 'SUCCESS',
        Pending = <any> 'PENDING',
        Cancelled = <any> 'CANCELLED',
        Onhold = <any> 'ONHOLD'
    }
    export enum RefundTypeEnum {
        PaymentAutoRefund = <any> 'PAYMENT_AUTO_REFUND',
        MerchantInitiated = <any> 'MERCHANT_INITIATED',
        UnreconciledAutoRefund = <any> 'UNRECONCILED_AUTO_REFUND'
    }
    export enum RefundModeEnum {
        Standard = <any> 'STANDARD',
        Instant = <any> 'INSTANT'
    }
}
